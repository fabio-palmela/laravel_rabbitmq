@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
HIDE_STEREOTYPE()

SHOW_PERSON_OUTLINE()
LAYOUT_LEFT_RIGHT()

System_Boundary(sistemas_internos, "Sistemas Internos") {
  Container(resources, "Simulador Service", "Laravel", "Fornece frontend ao sistema.")
}

System_Boundary(consignado_service, "Serviços de Crédito Consignado") {
  Container(simulador_backend, "Simulador Backend", "Laravel", "Backend da aplicação.")
  Container(simulador_frontend, "Simulador Frontend", "VueJs", "Frontend da aplicação.")
  ContainerDb(database_simulador_consignado, "Cálcular Service", "Laravel", "Fornece frontend ao sistema.")
  SystemQueue(queue_simulador_consignado, "Queue", "Laravel", "Fornece frontend ao sistema.")
  Container_Boundary(confirma_calculo_service, "Confirmação de Cálculo Service") {
    Container(confirma_calculo, "Consumer Cálculo Service", "Laravel", "Fornece frontend ao sistema.")
  }
  Container_Boundary(confirma_margem_service, "Confirmação de Margem Service") {
    Container(confirma_margem, "Consumer Margem Service", "Laravel", "Fornece frontend ao sistema.")
  }
}

' Container_Boundary(calculo_consignado_service, "Serviços de cálculo de parcelas") {
'   Container(calcular_service, "Cálcular Service", "Laravel", "Fornece frontend ao sistema.")
'   ContainerDb(database_parcelas, "Banco Parcelas", "mysql", "Registra cálculo das parcelas.")
'   SystemQueue(queue_calcular, "Calcular Parcelas", "Laravel/Queue", "Gerência Fila de cálculo.")
' }

' Container_Boundary(notifica_ente_service, "Serviços de notificação do ente consignante[email]") {
'   Container(notificar_ente_service, "Notificar ente service", "Laravel", "Fornece frontend ao sistema.")
'   SystemQueue(queue_notificar_ente, "Notificar Ente", "Laravel mail", "Notifica ente consignante.")
' }

' Container_Boundary(notifica_cooperado, "Serviços de notificação de cooperados[email]") {
'   Container(notificar_cooperado, "Notificar cooperado service", "Laravel", "Fornece frontend ao sistema.")
'   SystemQueue(queue_cooperado, "Notificar Ente", "Laravel mail", "Notifica ente consignante.")
' }

' ContainerQueue(queueSimulacao, "Fila Simulação", "RabbitMQ", "Recebe pedidos de simulação.\n<b>Bind:</b> simular.emprestimo.*")

resources --> queueSimulacao : <b>Publish simular.emprestimo.consignado</b>
queueSimulacao --> calcular_service : <b>Publish simular.emprestimo.consignado</b>

@enduml


# https://github.com/plantuml-stdlib/C4-PlantUML/blob/master/LayoutOptions.md#layout_as_sketch
@startuml LAYOUT_AS_SKETCH Sample
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

SET_SKETCH_STYLE($bgColor="lightblue", $fontColor="darkblue", $warningColor="darkred", $footerWarning="Sketch", $footerText="Created for discussion")

' PNG with font jlm_cmmi10 (typically another font is used)
' SET_SKETCH_STYLE($fontName="jlm_cmmi10")

' SVG with fallback fonts MS Gothic,Comic Sans MS, Comic Sans, Chalkboard SE, Comic Neue, cursive, sans-serif (typically without "MS Gothic")
SET_SKETCH_STYLE($fontName="MS Gothic,Comic Sans MS,Comic Sans,Chalkboard SE,Comic Neue,cursive,sans-serif")

LAYOUT_AS_SKETCH()

Person(admin, "Administrator")
System_Boundary(c1, 'Sample') {
    Container(web_app, "Web Application", "C#, ASP.NET Core 2.1 MVC", "Allows users to compare multiple Twitter timelines")
}
System(twitter, "Twitter")

Rel(admin, web_app, "Uses", "HTTPS")
Rel(web_app, twitter, "Gets tweets from", "HTTPS")
@enduml